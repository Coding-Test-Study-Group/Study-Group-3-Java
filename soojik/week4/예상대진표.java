package soojik.week4;

public class 예상대진표 {
  public static void main(String[] args) {

    System.out.println(solution(8, 4, 7));
  }
  static int solution(int n, int a, int b) {
    // 가장 처음 라운드는 무조건 하기 떄문에 1로 설정해주었다.
    int answer = 1;

    /*
    1-2 3-4 5-6 ... n-1-n

    와 같이 토너먼트가 이루어진다.

    규칙을 찾자면
    1~N 구간을 0~N-1 로 땡겨서
    0-1 2-3 4-5 ... n-2-n-1 로 바꾼 후

    각 번호를 2로 나누었을 때 몫이 같은 번호끼리 대결이 이루어지게된다.

     */


    // 따라서 먼저 각 a 와 b 번호를 1 씩 땡겨주었다.
    a -= 1;
    b -= 1;

    while (true) {

      // 그리고 a 와 b 를 각 2로 나눈 몫을 비교해 같다면 둘은 현재 매칭된 상태이니까 바로 거쳐왔던 라운드 횟수 (answer) 를 반환한다.
      /*
      여기서 a와 b의 zero exception 에 대한 처리를 해주지 않은 이유는
      a 와 b 는 같은 수가 아니고 2^1 ~ 2^20 사이의 범위라고 했다.
      따라서 최악의 경우 둘이 2, 3번이라서 1씩 땡겨 1, 2이라고 해도
      바로 밑의 if 문에서 걸리기 때문에 따로 a(또는 b) > 0 로 분기문을 걸지 않았다.
       */
      if (a/2 == b/2) {
        return answer;
      }

      /*

      둘은 만날때까지 무조건 이긴다는 조건이므로 이겼을 때 받을 번호를 설정해준다.

      0-1 붙었을 때 1이 이기면 (1/2 == )0번
      2-3 붙었을 때 3이 이기면 (3/2 == )1번
      6-7 붙었을 때 6이 이기면 (6/2 == )3번
       */

      a /= 2;
      b /= 2;

      // 다음 라운드를 진행한다는 의미로 1을 더해준다.
      ++answer;
    }
  }
}
